// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SushiRestaurant.data;

namespace SushiRestaurant.data.Migrations
{
    [DbContext(typeof(SushiRestaurantDbContext))]
    partial class SushiRestaurantDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SushiRestaurant.core.Products", b =>
                {
                    b.Property<int>("ProduktId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("IloscProdukt")
                        .HasColumnType("float");

                    b.Property<string>("JednostkaProdukt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazwaProdukt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProduktId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SushiRestaurant.core.ProductsSushi", b =>
                {
                    b.Property<int>("ProductsSushiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SushiId")
                        .HasColumnType("int");

                    b.HasKey("ProductsSushiId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SushiId");

                    b.ToTable("ProductsSushi");
                });

            modelBuilder.Entity("SushiRestaurant.core.Sushi", b =>
                {
                    b.Property<int>("SushiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CenaSushi")
                        .HasColumnType("float");

                    b.Property<int>("IloscSushi")
                        .HasColumnType("int");

                    b.Property<string>("NazwaSushi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpisSushi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SushiId");

                    b.ToTable("Sushi");
                });

            modelBuilder.Entity("SushiRestaurant.core.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SushiRestaurant.core.Zestawy", b =>
                {
                    b.Property<int>("ZestawyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazwaZestaw")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ZestawyId");

                    b.ToTable("Zestawy");
                });

            modelBuilder.Entity("SushiRestaurant.core.ZestawySushi", b =>
                {
                    b.Property<int>("ZestawySushiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SushiId")
                        .HasColumnType("int");

                    b.Property<int>("ZestawyId")
                        .HasColumnType("int");

                    b.HasKey("ZestawySushiId");

                    b.HasIndex("SushiId");

                    b.HasIndex("ZestawyId");

                    b.ToTable("ZestawySushi");
                });

            modelBuilder.Entity("SushiRestaurant.core.ProductsSushi", b =>
                {
                    b.HasOne("SushiRestaurant.core.Products", "Products")
                        .WithMany("ProduktSushi")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SushiRestaurant.core.Sushi", "Sushi")
                        .WithMany("Składniki")
                        .HasForeignKey("SushiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SushiRestaurant.core.ZestawySushi", b =>
                {
                    b.HasOne("SushiRestaurant.core.Sushi", "Sushi")
                        .WithMany()
                        .HasForeignKey("SushiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SushiRestaurant.core.Zestawy", "Zestawy")
                        .WithMany()
                        .HasForeignKey("ZestawyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
